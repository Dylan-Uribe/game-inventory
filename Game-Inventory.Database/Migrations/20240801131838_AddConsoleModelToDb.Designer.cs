// <auto-generated />
using Game_Inventory.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Game_Inventory.Database.Migrations
{
    [DbContext(typeof(GameStopContext))]
    [Migration("20240801131838_AddConsoleModelToDb")]
    partial class AddConsoleModelToDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Game_Inventory.Database.Company", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CEO")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.HasKey("ID")
                        .HasName("Pk_Company");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("Game_Inventory.Database.Console", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CompanyID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("Price")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(6,2)")
                        .HasDefaultValue(0m);

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.HasKey("ID")
                        .HasName("Pk_Console");

                    b.HasIndex("CompanyID");

                    b.ToTable("Consoles");
                });

            modelBuilder.Entity("Game_Inventory.Database.Console", b =>
                {
                    b.HasOne("Game_Inventory.Database.Company", "Company")
                        .WithMany("Consoles")
                        .HasForeignKey("CompanyID")
                        .IsRequired()
                        .HasConstraintName("Fk_Console_Company");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Game_Inventory.Database.Company", b =>
                {
                    b.Navigation("Consoles");
                });
#pragma warning restore 612, 618
        }
    }
}
